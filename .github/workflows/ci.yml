name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: todolist
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        # Add a delay to ensure MySQL is fully ready
        timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" -uroot -proot --silent; then
              echo "MySQL is ready!"
              break
            else
              echo "Waiting for MySQL... attempt $i"
              sleep 2
            fi
          done
          
      - name: Verify database connectivity
        run: |
          mysql -h 127.0.0.1 -u root -proot -e "SHOW DATABASES;"
          mysql -h 127.0.0.1 -u root -proot -e "USE todolist; SHOW TABLES;"
      
      - name: Build and run unit tests with detailed logging
        run: mvn clean test -DskipITs=true -e -X
        working-directory: ./backend/to-do-list
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/todolist?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root
          SPRING_PROFILES_ACTIVE: test
          
      - name: Check test reports if tests fail
        if: failure()
        run: |
          echo "=== Surefire reports ==="
          find target/surefire-reports -name "*.txt" -exec cat {} \;
        working-directory: ./backend/to-do-list